// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: usercenter_dictionary.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Params:
	//
	//	*GetDictionaryRequest_Id
	//	*GetDictionaryRequest_BinaryAndKeyword_
	Params isGetDictionaryRequest_Params `protobuf_oneof:"params"`
}

func (x *GetDictionaryRequest) Reset() {
	*x = GetDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionaryRequest) ProtoMessage() {}

func (x *GetDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionaryRequest.ProtoReflect.Descriptor instead.
func (*GetDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{0}
}

func (m *GetDictionaryRequest) GetParams() isGetDictionaryRequest_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (x *GetDictionaryRequest) GetId() uint32 {
	if x, ok := x.GetParams().(*GetDictionaryRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetDictionaryRequest) GetBinaryAndKeyword() *GetDictionaryRequest_BinaryAndKeyword {
	if x, ok := x.GetParams().(*GetDictionaryRequest_BinaryAndKeyword_); ok {
		return x.BinaryAndKeyword
	}
	return nil
}

type isGetDictionaryRequest_Params interface {
	isGetDictionaryRequest_Params()
}

type GetDictionaryRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetDictionaryRequest_BinaryAndKeyword_ struct {
	BinaryAndKeyword *GetDictionaryRequest_BinaryAndKeyword `protobuf:"bytes,2,opt,name=binaryAndKeyword,proto3,oneof"`
}

func (*GetDictionaryRequest_Id) isGetDictionaryRequest_Params() {}

func (*GetDictionaryRequest_BinaryAndKeyword_) isGetDictionaryRequest_Params() {}

type GetDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint32                     `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Keyword     string                     `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Binary      string                     `protobuf:"bytes,4,opt,name=binary,proto3" json:"binary,omitempty"`
	Description *string                    `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreatedAt   uint32                     `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   uint32                     `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Users       []*GetDictionaryReply_User `protobuf:"bytes,8,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetDictionaryReply) Reset() {
	*x = GetDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionaryReply) ProtoMessage() {}

func (x *GetDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionaryReply.ProtoReflect.Descriptor instead.
func (*GetDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{1}
}

func (x *GetDictionaryReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDictionaryReply) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetDictionaryReply) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetDictionaryReply) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *GetDictionaryReply) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetDictionaryReply) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetDictionaryReply) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetDictionaryReply) GetUsers() []*GetDictionaryReply_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type ListDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Order    *string `protobuf:"bytes,3,opt,name=order,proto3,oneof" json:"order,omitempty"`
	OrderBy  *string `protobuf:"bytes,4,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`
	Keyword  *string `protobuf:"bytes,5,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Binary   *string `protobuf:"bytes,6,opt,name=binary,proto3,oneof" json:"binary,omitempty"`
}

func (x *ListDictionaryRequest) Reset() {
	*x = ListDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictionaryRequest) ProtoMessage() {}

func (x *ListDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictionaryRequest.ProtoReflect.Descriptor instead.
func (*ListDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{2}
}

func (x *ListDictionaryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDictionaryRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDictionaryRequest) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

func (x *ListDictionaryRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListDictionaryRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListDictionaryRequest) GetBinary() string {
	if x != nil && x.Binary != nil {
		return *x.Binary
	}
	return ""
}

type ListDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListDictionaryReply_Dictionary `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListDictionaryReply) Reset() {
	*x = ListDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictionaryReply) ProtoMessage() {}

func (x *ListDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictionaryReply.ProtoReflect.Descriptor instead.
func (*ListDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{3}
}

func (x *ListDictionaryReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDictionaryReply) GetList() []*ListDictionaryReply_Dictionary {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint32                          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Keyword     string                          `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Binary      string                          `protobuf:"bytes,4,opt,name=binary,proto3" json:"binary,omitempty"`
	Description *string                         `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Users       []*CreateDictionaryRequest_User `protobuf:"bytes,6,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *CreateDictionaryRequest) Reset() {
	*x = CreateDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictionaryRequest) ProtoMessage() {}

func (x *CreateDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictionaryRequest.ProtoReflect.Descriptor instead.
func (*CreateDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDictionaryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateDictionaryRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateDictionaryRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CreateDictionaryRequest) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *CreateDictionaryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateDictionaryRequest) GetUsers() []*CreateDictionaryRequest_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateDictionaryReply) Reset() {
	*x = CreateDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictionaryReply) ProtoMessage() {}

func (x *CreateDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictionaryReply.ProtoReflect.Descriptor instead.
func (*CreateDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDictionaryReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint32                                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId             *uint32                                      `protobuf:"varint,2,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	Keyword            *string                                      `protobuf:"bytes,3,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Binary             *string                                      `protobuf:"bytes,4,opt,name=binary,proto3,oneof" json:"binary,omitempty"`
	Description        *string                                      `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	UpdateUserRequests []*UpdateDictionaryRequest_UpdateUserRequest `protobuf:"bytes,6,rep,name=updateUserRequests,proto3" json:"updateUserRequests,omitempty"`
}

func (x *UpdateDictionaryRequest) Reset() {
	*x = UpdateDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictionaryRequest) ProtoMessage() {}

func (x *UpdateDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictionaryRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDictionaryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDictionaryRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UpdateDictionaryRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *UpdateDictionaryRequest) GetBinary() string {
	if x != nil && x.Binary != nil {
		return *x.Binary
	}
	return ""
}

func (x *UpdateDictionaryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateDictionaryRequest) GetUpdateUserRequests() []*UpdateDictionaryRequest_UpdateUserRequest {
	if x != nil {
		return x.UpdateUserRequests
	}
	return nil
}

type UpdateDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDictionaryReply) Reset() {
	*x = UpdateDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictionaryReply) ProtoMessage() {}

func (x *UpdateDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictionaryReply.ProtoReflect.Descriptor instead.
func (*UpdateDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{7}
}

type DeleteDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteDictionaryRequest) Reset() {
	*x = DeleteDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictionaryRequest) ProtoMessage() {}

func (x *DeleteDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictionaryRequest.ProtoReflect.Descriptor instead.
func (*DeleteDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDictionaryRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DeleteDictionaryReply) Reset() {
	*x = DeleteDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictionaryReply) ProtoMessage() {}

func (x *DeleteDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictionaryReply.ProtoReflect.Descriptor instead.
func (*DeleteDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDictionaryReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetTrashDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Params:
	//
	//	*GetTrashDictionaryRequest_Id
	//	*GetTrashDictionaryRequest_BinaryAndKeyword_
	Params isGetTrashDictionaryRequest_Params `protobuf_oneof:"params"`
}

func (x *GetTrashDictionaryRequest) Reset() {
	*x = GetTrashDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrashDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrashDictionaryRequest) ProtoMessage() {}

func (x *GetTrashDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrashDictionaryRequest.ProtoReflect.Descriptor instead.
func (*GetTrashDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{10}
}

func (m *GetTrashDictionaryRequest) GetParams() isGetTrashDictionaryRequest_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (x *GetTrashDictionaryRequest) GetId() uint32 {
	if x, ok := x.GetParams().(*GetTrashDictionaryRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetTrashDictionaryRequest) GetBinaryAndKeyword() *GetTrashDictionaryRequest_BinaryAndKeyword {
	if x, ok := x.GetParams().(*GetTrashDictionaryRequest_BinaryAndKeyword_); ok {
		return x.BinaryAndKeyword
	}
	return nil
}

type isGetTrashDictionaryRequest_Params interface {
	isGetTrashDictionaryRequest_Params()
}

type GetTrashDictionaryRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetTrashDictionaryRequest_BinaryAndKeyword_ struct {
	BinaryAndKeyword *GetTrashDictionaryRequest_BinaryAndKeyword `protobuf:"bytes,2,opt,name=binaryAndKeyword,proto3,oneof"`
}

func (*GetTrashDictionaryRequest_Id) isGetTrashDictionaryRequest_Params() {}

func (*GetTrashDictionaryRequest_BinaryAndKeyword_) isGetTrashDictionaryRequest_Params() {}

type GetTrashDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint32                          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Keyword     string                          `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Binary      string                          `protobuf:"bytes,4,opt,name=binary,proto3" json:"binary,omitempty"`
	Description *string                         `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreatedAt   uint32                          `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   uint32                          `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt   uint32                          `protobuf:"varint,8,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Users       []*GetTrashDictionaryReply_User `protobuf:"bytes,9,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetTrashDictionaryReply) Reset() {
	*x = GetTrashDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrashDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrashDictionaryReply) ProtoMessage() {}

func (x *GetTrashDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrashDictionaryReply.ProtoReflect.Descriptor instead.
func (*GetTrashDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{11}
}

func (x *GetTrashDictionaryReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTrashDictionaryReply) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetTrashDictionaryReply) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetTrashDictionaryReply) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *GetTrashDictionaryReply) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *GetTrashDictionaryReply) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetTrashDictionaryReply) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GetTrashDictionaryReply) GetDeletedAt() uint32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *GetTrashDictionaryReply) GetUsers() []*GetTrashDictionaryReply_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type ListTrashDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Order    *string `protobuf:"bytes,3,opt,name=order,proto3,oneof" json:"order,omitempty"`
	OrderBy  *string `protobuf:"bytes,4,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`
	Keyword  *string `protobuf:"bytes,5,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Binary   *string `protobuf:"bytes,6,opt,name=binary,proto3,oneof" json:"binary,omitempty"`
}

func (x *ListTrashDictionaryRequest) Reset() {
	*x = ListTrashDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrashDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrashDictionaryRequest) ProtoMessage() {}

func (x *ListTrashDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrashDictionaryRequest.ProtoReflect.Descriptor instead.
func (*ListTrashDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{12}
}

func (x *ListTrashDictionaryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTrashDictionaryRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTrashDictionaryRequest) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

func (x *ListTrashDictionaryRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListTrashDictionaryRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListTrashDictionaryRequest) GetBinary() string {
	if x != nil && x.Binary != nil {
		return *x.Binary
	}
	return ""
}

type ListTrashDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListTrashDictionaryReply_Dictionary `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListTrashDictionaryReply) Reset() {
	*x = ListTrashDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrashDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrashDictionaryReply) ProtoMessage() {}

func (x *ListTrashDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrashDictionaryReply.ProtoReflect.Descriptor instead.
func (*ListTrashDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{13}
}

func (x *ListTrashDictionaryReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTrashDictionaryReply) GetList() []*ListTrashDictionaryReply_Dictionary {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteTrashDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteTrashDictionaryRequest) Reset() {
	*x = DeleteTrashDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTrashDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrashDictionaryRequest) ProtoMessage() {}

func (x *DeleteTrashDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrashDictionaryRequest.ProtoReflect.Descriptor instead.
func (*DeleteTrashDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteTrashDictionaryRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteTrashDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DeleteTrashDictionaryReply) Reset() {
	*x = DeleteTrashDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTrashDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrashDictionaryReply) ProtoMessage() {}

func (x *DeleteTrashDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrashDictionaryReply.ProtoReflect.Descriptor instead.
func (*DeleteTrashDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTrashDictionaryReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RevertTrashDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RevertTrashDictionaryRequest) Reset() {
	*x = RevertTrashDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevertTrashDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertTrashDictionaryRequest) ProtoMessage() {}

func (x *RevertTrashDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertTrashDictionaryRequest.ProtoReflect.Descriptor instead.
func (*RevertTrashDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{16}
}

func (x *RevertTrashDictionaryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RevertTrashDictionaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevertTrashDictionaryReply) Reset() {
	*x = RevertTrashDictionaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevertTrashDictionaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevertTrashDictionaryReply) ProtoMessage() {}

func (x *RevertTrashDictionaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevertTrashDictionaryReply.ProtoReflect.Descriptor instead.
func (*RevertTrashDictionaryReply) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{17}
}

type GetDictionaryRequest_BinaryAndKeyword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binary  string `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *GetDictionaryRequest_BinaryAndKeyword) Reset() {
	*x = GetDictionaryRequest_BinaryAndKeyword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionaryRequest_BinaryAndKeyword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionaryRequest_BinaryAndKeyword) ProtoMessage() {}

func (x *GetDictionaryRequest_BinaryAndKeyword) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionaryRequest_BinaryAndKeyword.ProtoReflect.Descriptor instead.
func (*GetDictionaryRequest_BinaryAndKeyword) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GetDictionaryRequest_BinaryAndKeyword) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *GetDictionaryRequest_BinaryAndKeyword) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type GetDictionaryReply_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDictionaryReply_User) Reset() {
	*x = GetDictionaryReply_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionaryReply_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionaryReply_User) ProtoMessage() {}

func (x *GetDictionaryReply_User) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionaryReply_User.ProtoReflect.Descriptor instead.
func (*GetDictionaryReply_User) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetDictionaryReply_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDictionaryReply_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListDictionaryReply_Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint32                                 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Keyword     string                                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Binary      string                                 `protobuf:"bytes,4,opt,name=binary,proto3" json:"binary,omitempty"`
	Description *string                                `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreatedAt   uint32                                 `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   uint32                                 `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Users       []*ListDictionaryReply_Dictionary_User `protobuf:"bytes,8,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListDictionaryReply_Dictionary) Reset() {
	*x = ListDictionaryReply_Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictionaryReply_Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictionaryReply_Dictionary) ProtoMessage() {}

func (x *ListDictionaryReply_Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictionaryReply_Dictionary.ProtoReflect.Descriptor instead.
func (*ListDictionaryReply_Dictionary) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListDictionaryReply_Dictionary) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListDictionaryReply_Dictionary) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListDictionaryReply_Dictionary) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListDictionaryReply_Dictionary) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *ListDictionaryReply_Dictionary) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ListDictionaryReply_Dictionary) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListDictionaryReply_Dictionary) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListDictionaryReply_Dictionary) GetUsers() []*ListDictionaryReply_Dictionary_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type ListDictionaryReply_Dictionary_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListDictionaryReply_Dictionary_User) Reset() {
	*x = ListDictionaryReply_Dictionary_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDictionaryReply_Dictionary_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictionaryReply_Dictionary_User) ProtoMessage() {}

func (x *ListDictionaryReply_Dictionary_User) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictionaryReply_Dictionary_User.ProtoReflect.Descriptor instead.
func (*ListDictionaryReply_Dictionary_User) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *ListDictionaryReply_Dictionary_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListDictionaryReply_Dictionary_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateDictionaryRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateDictionaryRequest_User) Reset() {
	*x = CreateDictionaryRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDictionaryRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictionaryRequest_User) ProtoMessage() {}

func (x *CreateDictionaryRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictionaryRequest_User.ProtoReflect.Descriptor instead.
func (*CreateDictionaryRequest_User) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreateDictionaryRequest_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateDictionaryRequest_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateDictionaryRequest_UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *UpdateDictionaryRequest_UpdateUserRequest) Reset() {
	*x = UpdateDictionaryRequest_UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictionaryRequest_UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictionaryRequest_UpdateUserRequest) ProtoMessage() {}

func (x *UpdateDictionaryRequest_UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictionaryRequest_UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictionaryRequest_UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UpdateDictionaryRequest_UpdateUserRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDictionaryRequest_UpdateUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type GetTrashDictionaryRequest_BinaryAndKeyword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binary  string `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *GetTrashDictionaryRequest_BinaryAndKeyword) Reset() {
	*x = GetTrashDictionaryRequest_BinaryAndKeyword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrashDictionaryRequest_BinaryAndKeyword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrashDictionaryRequest_BinaryAndKeyword) ProtoMessage() {}

func (x *GetTrashDictionaryRequest_BinaryAndKeyword) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrashDictionaryRequest_BinaryAndKeyword.ProtoReflect.Descriptor instead.
func (*GetTrashDictionaryRequest_BinaryAndKeyword) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetTrashDictionaryRequest_BinaryAndKeyword) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *GetTrashDictionaryRequest_BinaryAndKeyword) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type GetTrashDictionaryReply_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTrashDictionaryReply_User) Reset() {
	*x = GetTrashDictionaryReply_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrashDictionaryReply_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrashDictionaryReply_User) ProtoMessage() {}

func (x *GetTrashDictionaryReply_User) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrashDictionaryReply_User.ProtoReflect.Descriptor instead.
func (*GetTrashDictionaryReply_User) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetTrashDictionaryReply_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTrashDictionaryReply_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListTrashDictionaryReply_Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint32                                      `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Keyword     string                                      `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Binary      string                                      `protobuf:"bytes,4,opt,name=binary,proto3" json:"binary,omitempty"`
	Description *string                                     `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreatedAt   uint32                                      `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   uint32                                      `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt   uint32                                      `protobuf:"varint,8,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Users       []*ListTrashDictionaryReply_Dictionary_User `protobuf:"bytes,9,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListTrashDictionaryReply_Dictionary) Reset() {
	*x = ListTrashDictionaryReply_Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrashDictionaryReply_Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrashDictionaryReply_Dictionary) ProtoMessage() {}

func (x *ListTrashDictionaryReply_Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrashDictionaryReply_Dictionary.ProtoReflect.Descriptor instead.
func (*ListTrashDictionaryReply_Dictionary) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListTrashDictionaryReply_Dictionary) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTrashDictionaryReply_Dictionary) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListTrashDictionaryReply_Dictionary) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListTrashDictionaryReply_Dictionary) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *ListTrashDictionaryReply_Dictionary) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ListTrashDictionaryReply_Dictionary) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListTrashDictionaryReply_Dictionary) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListTrashDictionaryReply_Dictionary) GetDeletedAt() uint32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ListTrashDictionaryReply_Dictionary) GetUsers() []*ListTrashDictionaryReply_Dictionary_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type ListTrashDictionaryReply_Dictionary_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListTrashDictionaryReply_Dictionary_User) Reset() {
	*x = ListTrashDictionaryReply_Dictionary_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usercenter_dictionary_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrashDictionaryReply_Dictionary_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrashDictionaryReply_Dictionary_User) ProtoMessage() {}

func (x *ListTrashDictionaryReply_Dictionary_User) ProtoReflect() protoreflect.Message {
	mi := &file_usercenter_dictionary_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrashDictionaryReply_Dictionary_User.ProtoReflect.Descriptor instead.
func (*ListTrashDictionaryReply_Dictionary_User) Descriptor() ([]byte, []int) {
	return file_usercenter_dictionary_proto_rawDescGZIP(), []int{13, 0, 0}
}

func (x *ListTrashDictionaryReply_Dictionary_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTrashDictionaryReply_Dictionary_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_usercenter_dictionary_proto protoreflect.FileDescriptor

var file_usercenter_dictionary_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x75,
	0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x91, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x7c, 0x0a, 0x10, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x10, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x1a, 0x56, 0x0a, 0x10, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x80, 0x03, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x28, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x56, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x2a, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x32, 0x28, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x72, 0x0b, 0x52, 0x03, 0x61, 0x73, 0x63, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x48, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x29, 0xfa, 0x42, 0x26, 0x72, 0x24, 0x52, 0x02, 0x69, 0x64, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x48, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x02, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x03, 0x52, 0x06,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0x8f, 0x04, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x5b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x1a, 0x84, 0x03, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x62, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x2a, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x5b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x2a, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xc2, 0x03, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x01,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x06,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x02, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x45,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x39, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06,
	0x08, 0x01, 0x10, 0x32, 0x18, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9c, 0x02, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e,
	0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x73,
	0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x56, 0x0a, 0x10, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x41, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42,
	0x08, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xa8, 0x03, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x5b, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x2a, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x02, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x32, 0x28, 0x01, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x72, 0x0b, 0x52, 0x03, 0x61,
	0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xfa, 0x42, 0x26, 0x72, 0x24, 0x52, 0x02, 0x69, 0x64,
	0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x48, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x02, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48,
	0x03, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0xbc, 0x04, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x60, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xa7,
	0x03, 0x0a, 0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x67, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x51, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x2a, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10,
	0x32, 0x18, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x37, 0x0a, 0x1c,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x42, 0x0a, 0x27, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0c,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x07,
	0x2e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_usercenter_dictionary_proto_rawDescOnce sync.Once
	file_usercenter_dictionary_proto_rawDescData = file_usercenter_dictionary_proto_rawDesc
)

func file_usercenter_dictionary_proto_rawDescGZIP() []byte {
	file_usercenter_dictionary_proto_rawDescOnce.Do(func() {
		file_usercenter_dictionary_proto_rawDescData = protoimpl.X.CompressGZIP(file_usercenter_dictionary_proto_rawDescData)
	})
	return file_usercenter_dictionary_proto_rawDescData
}

var file_usercenter_dictionary_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_usercenter_dictionary_proto_goTypes = []interface{}{
	(*GetDictionaryRequest)(nil),                       // 0: usercenter.api.usercenter.dictionary.v1.GetDictionaryRequest
	(*GetDictionaryReply)(nil),                         // 1: usercenter.api.usercenter.dictionary.v1.GetDictionaryReply
	(*ListDictionaryRequest)(nil),                      // 2: usercenter.api.usercenter.dictionary.v1.ListDictionaryRequest
	(*ListDictionaryReply)(nil),                        // 3: usercenter.api.usercenter.dictionary.v1.ListDictionaryReply
	(*CreateDictionaryRequest)(nil),                    // 4: usercenter.api.usercenter.dictionary.v1.CreateDictionaryRequest
	(*CreateDictionaryReply)(nil),                      // 5: usercenter.api.usercenter.dictionary.v1.CreateDictionaryReply
	(*UpdateDictionaryRequest)(nil),                    // 6: usercenter.api.usercenter.dictionary.v1.UpdateDictionaryRequest
	(*UpdateDictionaryReply)(nil),                      // 7: usercenter.api.usercenter.dictionary.v1.UpdateDictionaryReply
	(*DeleteDictionaryRequest)(nil),                    // 8: usercenter.api.usercenter.dictionary.v1.DeleteDictionaryRequest
	(*DeleteDictionaryReply)(nil),                      // 9: usercenter.api.usercenter.dictionary.v1.DeleteDictionaryReply
	(*GetTrashDictionaryRequest)(nil),                  // 10: usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryRequest
	(*GetTrashDictionaryReply)(nil),                    // 11: usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryReply
	(*ListTrashDictionaryRequest)(nil),                 // 12: usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryRequest
	(*ListTrashDictionaryReply)(nil),                   // 13: usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply
	(*DeleteTrashDictionaryRequest)(nil),               // 14: usercenter.api.usercenter.dictionary.v1.DeleteTrashDictionaryRequest
	(*DeleteTrashDictionaryReply)(nil),                 // 15: usercenter.api.usercenter.dictionary.v1.DeleteTrashDictionaryReply
	(*RevertTrashDictionaryRequest)(nil),               // 16: usercenter.api.usercenter.dictionary.v1.RevertTrashDictionaryRequest
	(*RevertTrashDictionaryReply)(nil),                 // 17: usercenter.api.usercenter.dictionary.v1.RevertTrashDictionaryReply
	(*GetDictionaryRequest_BinaryAndKeyword)(nil),      // 18: usercenter.api.usercenter.dictionary.v1.GetDictionaryRequest.BinaryAndKeyword
	(*GetDictionaryReply_User)(nil),                    // 19: usercenter.api.usercenter.dictionary.v1.GetDictionaryReply.User
	(*ListDictionaryReply_Dictionary)(nil),             // 20: usercenter.api.usercenter.dictionary.v1.ListDictionaryReply.Dictionary
	(*ListDictionaryReply_Dictionary_User)(nil),        // 21: usercenter.api.usercenter.dictionary.v1.ListDictionaryReply.Dictionary.User
	(*CreateDictionaryRequest_User)(nil),               // 22: usercenter.api.usercenter.dictionary.v1.CreateDictionaryRequest.User
	(*UpdateDictionaryRequest_UpdateUserRequest)(nil),  // 23: usercenter.api.usercenter.dictionary.v1.UpdateDictionaryRequest.UpdateUserRequest
	(*GetTrashDictionaryRequest_BinaryAndKeyword)(nil), // 24: usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryRequest.BinaryAndKeyword
	(*GetTrashDictionaryReply_User)(nil),               // 25: usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryReply.User
	(*ListTrashDictionaryReply_Dictionary)(nil),        // 26: usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply.Dictionary
	(*ListTrashDictionaryReply_Dictionary_User)(nil),   // 27: usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply.Dictionary.User
}
var file_usercenter_dictionary_proto_depIdxs = []int32{
	18, // 0: usercenter.api.usercenter.dictionary.v1.GetDictionaryRequest.binaryAndKeyword:type_name -> usercenter.api.usercenter.dictionary.v1.GetDictionaryRequest.BinaryAndKeyword
	19, // 1: usercenter.api.usercenter.dictionary.v1.GetDictionaryReply.users:type_name -> usercenter.api.usercenter.dictionary.v1.GetDictionaryReply.User
	20, // 2: usercenter.api.usercenter.dictionary.v1.ListDictionaryReply.list:type_name -> usercenter.api.usercenter.dictionary.v1.ListDictionaryReply.Dictionary
	22, // 3: usercenter.api.usercenter.dictionary.v1.CreateDictionaryRequest.users:type_name -> usercenter.api.usercenter.dictionary.v1.CreateDictionaryRequest.User
	23, // 4: usercenter.api.usercenter.dictionary.v1.UpdateDictionaryRequest.updateUserRequests:type_name -> usercenter.api.usercenter.dictionary.v1.UpdateDictionaryRequest.UpdateUserRequest
	24, // 5: usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryRequest.binaryAndKeyword:type_name -> usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryRequest.BinaryAndKeyword
	25, // 6: usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryReply.users:type_name -> usercenter.api.usercenter.dictionary.v1.GetTrashDictionaryReply.User
	26, // 7: usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply.list:type_name -> usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply.Dictionary
	21, // 8: usercenter.api.usercenter.dictionary.v1.ListDictionaryReply.Dictionary.users:type_name -> usercenter.api.usercenter.dictionary.v1.ListDictionaryReply.Dictionary.User
	27, // 9: usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply.Dictionary.users:type_name -> usercenter.api.usercenter.dictionary.v1.ListTrashDictionaryReply.Dictionary.User
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_usercenter_dictionary_proto_init() }
func file_usercenter_dictionary_proto_init() {
	if File_usercenter_dictionary_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_usercenter_dictionary_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrashDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrashDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrashDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrashDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTrashDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTrashDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevertTrashDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevertTrashDictionaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionaryRequest_BinaryAndKeyword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionaryReply_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictionaryReply_Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDictionaryReply_Dictionary_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDictionaryRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictionaryRequest_UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrashDictionaryRequest_BinaryAndKeyword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrashDictionaryReply_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrashDictionaryReply_Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usercenter_dictionary_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrashDictionaryReply_Dictionary_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_usercenter_dictionary_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GetDictionaryRequest_Id)(nil),
		(*GetDictionaryRequest_BinaryAndKeyword_)(nil),
	}
	file_usercenter_dictionary_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*GetTrashDictionaryRequest_Id)(nil),
		(*GetTrashDictionaryRequest_BinaryAndKeyword_)(nil),
	}
	file_usercenter_dictionary_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_usercenter_dictionary_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usercenter_dictionary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_usercenter_dictionary_proto_goTypes,
		DependencyIndexes: file_usercenter_dictionary_proto_depIdxs,
		MessageInfos:      file_usercenter_dictionary_proto_msgTypes,
	}.Build()
	File_usercenter_dictionary_proto = out.File
	file_usercenter_dictionary_proto_rawDesc = nil
	file_usercenter_dictionary_proto_goTypes = nil
	file_usercenter_dictionary_proto_depIdxs = nil
}
