syntax = "proto3";

package kratosx.api.kratosx.notice.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_outer_classname = "NoticeV1";
option java_package = "kratosx.api.kratosx.notice.v1";

import "validate/validate.proto";

message GetNoticeRequest {
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
}

message GetNoticeReply {
  message Classify {
    uint32 id = 1;
    string title = 2;
  }
  uint32 id = 1;
  uint32 classifyId = 2;
  string title = 3;
  repeated Classify classifies = 4;
}

message ListNoticeRequest {
  uint32 page = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 pageSize = 2[(validate.rules).uint32 = {gt: 0,lte:50}];
  optional string order = 3[(validate.rules).string = {in: ["asc","desc"]}];
  optional string orderBy = 4;
  optional uint32 id = 5;
  optional uint32 classifyId = 6;
  optional string title = 7;
}

message ListNoticeReply {
  message Notice {
    message Classify {
      uint32 id = 1;
      string title = 2;
    }
    uint32 id = 1;
    uint32 classifyId = 2;
    string title = 3;
    repeated Classify classifies = 4;
  }

  uint32 total = 1;
  repeated Notice list = 2;
}

message CreateNoticeRequest {
  message Classify {
    uint32 id = 1;
    string title = 2;
  }
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 classifyId = 2[(validate.rules).uint32 = {gt: 0}];
  string title = 3[(validate.rules).string = {min_len: 1}];
  repeated Classify classifies = 4;
}

message CreateNoticeReply {
  uint32 id = 1;
}

message ImportNoticeRequest {
  repeated CreateNoticeRequest list = 1;
}

message ImportNoticeReply {
    uint32 updateTotal = 1;
    uint32 createTotal = 2;
}

message ExportNoticeRequest {
  optional uint32 id = 1;
  optional uint32 classifyId = 2;
  optional string title = 3;
}

message ExportNoticeReply {
  string src = 1;
}

message UpdateNoticeRequest {
  message Classify {
    uint32 id = 1;
    string title = 2;
  }
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 classifyId = 2[(validate.rules).uint32 = {gt: 0}];
  string title = 3[(validate.rules).string = {min_len: 1}];
  repeated Classify classifies = 4;
}

message UpdateNoticeReply {
}

message DeleteNoticeRequest {
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
}

message DeleteNoticeReply {
}

message BatchDeleteNoticeRequest {
  repeated uint32 ids = 1[(validate.rules).repeated = {min_items: 0, unique:true, max_items:50}];
}

message BatchDeleteNoticeReply {
  uint32 total = 1;
}

